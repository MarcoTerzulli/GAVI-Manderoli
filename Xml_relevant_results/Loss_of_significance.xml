<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.35.0-wmf.31</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Loss of significance</title>
    <ns>0</ns>
    <id>142009</id>
    <revision>
      <id>952171075</id>
      <parentid>951267227</parentid>
      <timestamp>2020-04-20T22:13:56Z</timestamp>
      <contributor>
        <username>Macrakis</username>
        <id>49920</id>
      </contributor>
      <comment>dab</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10127" xml:space="preserve">{{Multiple issues|
{{More citations needed|date=July 2012}}
{{Confusing|reason=there are various uses of accuracy and precision (they are not the same) and significance, with unclear relation. Please make the meaning explicit, with a specific example relating all three, and how to obtain them from digits of a number (does the digit before the decimal point count or not, etc.)|date=July 2018}}
}}
{{Use dmy dates|date=January 2020|cs1-dates=y}}
[[File:Catastrophic cancellation.svg|thumbnail|right|Example of LOS in case of computing 2 forms of the same function]]

'''Loss of significance''' is an undesirable effect in calculations using finite-precision arithmetic such as [[floating-point arithmetic]]. It occurs when an operation on two numbers increases [[relative error]] substantially more than it increases [[absolute error]], for example in subtracting two nearly equal numbers (known as '''catastrophic cancellation'''). The effect is that the number of [[significant digit]]s in the result is reduced unacceptably. Ways to avoid this effect are studied in [[numerical analysis]].

==Demonstration of the problem==
The effect can be demonstrated with decimal numbers.
The following example demonstrates loss of significance for a decimal floating-point data type with 10 significant digits:

Consider the decimal number

    x = 0.1234567891234567890

A floating-point representation of this number on a machine that keeps 10 floating-point digits would be

    y = 0.1234567890

which is fairly close when measuring the error as a percentage of the value.  It is very different when measured in order of precision. The value 'x' is accurate to {{val|10|e=-19}}, while the value 'y' is only accurate to {{val|10|e=-10}}.

Now perform the calculation

    x - y = 0.1234567891234567890 − 0.1234567890000000000

The answer, accurate to 20 significant digits, is

    0.0000000001234567890

However, on the 10-digit floating-point machine, the calculation yields

    0.1234567891 − 0.1234567890 = 0.0000000001

In both cases the result is accurate to same order of magnitude as the inputs (−20 and −10 respectively).  In the second case, the answer seems to have one significant digit, which would amount to loss of significance.  However, in computer floating-point arithmetic, all operations can be viewed as being performed on [[antilogarithm]]s, for which the rules for [[significant figures]] indicate that the number of significant figures remains the same as the smallest number of significant figures in the [[wikt:mantissa|mantissas]].  The way to indicate this and represent the answer to 10 significant figures is

    {{val|1.000000000|e=-10}}

==Workarounds==
It is possible to do computations using an exact fractional representation of rational numbers and keep all significant digits, but this is often prohibitively slower than floating-point arithmetic.

One of the most important parts of numerical analysis is to avoid or minimize loss of significance in calculations. If the underlying problem is well-posed, there should be a stable algorithm for solving it.

== Loss of significant bits ==

Let ''x'' and ''y'' be positive normalized floating-point numbers.

In the subtraction ''x'' − ''y'', ''r'' significant bits are lost where

:&lt;math&gt;q \le r \le p,&lt;/math&gt;

:&lt;math&gt;2^{-p} \le 1 - \frac{y}{x} \le 2^{-q}&lt;/math&gt;

for some positive integers ''p'' and ''q''.

== Instability of the quadratic equation ==

For example, consider the [[quadratic equation]]

:&lt;math&gt;a x^2 + b x + c = 0,&lt;/math&gt;

with the two exact solutions:

:&lt;math&gt; x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}.&lt;/math&gt;

This formula may not always produce an accurate result.  For example, when &lt;math&gt;c&lt;/math&gt; is very small, loss of significance can occur in either of the root calculations, depending on the sign of &lt;math&gt;b&lt;/math&gt;.

The case &lt;math&gt;a = 1&lt;/math&gt;, &lt;math&gt;b = 200&lt;/math&gt;, &lt;math&gt;c = -0.000015&lt;/math&gt; will serve to illustrate the problem:

:&lt;math&gt;x^2 + 200 x - 0.000015 = 0.&lt;/math&gt;

We have

:&lt;math&gt;\sqrt{b^2 - 4 a c} = \sqrt{200^2 + 4 \times 1 \times 0.000015} = 200.00000015\dotso&lt;/math&gt;

In real arithmetic, the roots are

:&lt;math&gt;(-200 - 200.00000015) / 2 = -200.000000075,&lt;/math&gt;
:&lt;math&gt;(-200 + 200.00000015) / 2 = 0.000000075.&lt;/math&gt;

In 10-digit floating-point arithmetic:

:&lt;math&gt;(-200 - 200.0000001) / 2 = -200.00000005,&lt;/math&gt;
:&lt;math&gt;(-200 + 200.0000001) / 2 = 0.00000005.&lt;/math&gt;

Notice that the solution of greater [[absolute value|magnitude]] is accurate to ten digits, but the first nonzero digit of the solution of lesser magnitude is wrong.

Because of the subtraction that occurs in the quadratic equation, it does not constitute a stable algorithm to calculate the two roots.

=== A better algorithm ===
A careful [[floating-point]] computer implementation combines several strategies to produce a robust result. Assuming that the discriminant {{nowrap|''b''&lt;sup&gt;2&lt;/sup&gt; − 4''ac''}} is positive, and ''b'' is nonzero, the computation would be as follows:&lt;ref name="Press_1992"/&gt;

:&lt;math&gt;\begin{align}
 x_1 &amp;= \frac{-b - \sgn (b) \,\sqrt {b^2 - 4ac}}{2a}, \\
 x_2 &amp;= \frac{2c}{-b - \sgn (b) \,\sqrt {b^2 - 4ac}} = \frac{c}{ax_1}.
\end{align}&lt;/math&gt;

Here sgn denotes the [[sign function]], where &lt;math&gt;\sgn(b)&lt;/math&gt; is 1 if &lt;math&gt;b&lt;/math&gt; is positive, and −1 if &lt;math&gt;b&lt;/math&gt; is negative. This avoids cancellation problems between &lt;math&gt;b&lt;/math&gt; and the square root of the discriminant by ensuring that only numbers of the same sign are added.

To illustrate the instability of the standard quadratic formula compared to this formula, consider a quadratic equation with roots &lt;math&gt;1.786737589984535&lt;/math&gt; and &lt;math&gt;1.149782767465722 \times 10^{-8}&lt;/math&gt;. To 16 significant digits, roughly corresponding to [[double-precision]] accuracy on a computer, the monic quadratic equation with these roots may be written as

:&lt;math&gt;x^2 - 1.786737601482363 x + 2.054360090947453 \times 10^{-8} = 0.&lt;/math&gt;

Using the standard quadratic formula and maintaining 16 significant digits at each step, the standard quadratic formula yields
:&lt;math&gt;\sqrt{\Delta} = 1.786737578486707,&lt;/math&gt;
:&lt;math&gt;x_1 = (1.786737601482363 + 1.786737578486707) / 2 = 1.786737589984535,&lt;/math&gt;
:&lt;math&gt;x_2 = (1.786737601482363 - 1.786737578486707) / 2 = 0.000000011497828.&lt;/math&gt;
Note how cancellation has resulted in &lt;math&gt;x_2&lt;/math&gt; being computed to only 8 significant digits of accuracy.

The variant formula presented here, however, yields the following:
:&lt;math&gt;x_1 = (1.786737601482363 + 1.786737578486707) / 2 = 1.786737589984535,&lt;/math&gt;
:&lt;math&gt;x_2 = 2.054360090947453 \times 10^{-8} / 1.786737589984535 = 1.149782767465722 \times 10^{-8}.&lt;/math&gt;
Note the retention of all significant digits for &lt;math&gt;x_2&lt;/math&gt;.

Note that while the above formulation avoids catastrophic cancellation between &lt;math&gt;b&lt;/math&gt; and &lt;math&gt;\sqrt{b^2 - 4ac}&lt;/math&gt;, there remains a form of cancellation between the terms &lt;math&gt;b^2&lt;/math&gt; and &lt;math&gt;-4ac&lt;/math&gt; of the discriminant, which can still lead to loss of up to half of correct significant digits.&lt;ref name="Kahan_2004"/&gt;&lt;ref name="Higham_2002"/&gt;  The discriminant &lt;math&gt;b^2 - 4ac&lt;/math&gt; needs to be computed in arithmetic of twice the precision of the result to avoid this (e.g. [[Quadruple-precision floating-point format|quad]] precision if the final result is to be accurate to full [[double-precision floating-point format|double]] precision).&lt;ref name="Hough_1981"/&gt;  This can be in the form of a [[fused multiply-add]] operation.&lt;ref name="Kahan_2004"/&gt;

To illustrate this, consider the following quadratic equation, adapted from Kahan (2004):&lt;ref name="Kahan_2004"/&gt;
:&lt;math&gt;94906265.625x^2 - 189812534x + 94906268.375.&lt;/math&gt;
This equation has &lt;math&gt;\Delta = 7.5625&lt;/math&gt; and roots 
:&lt;math&gt;x_1 = 1.000000028975958,&lt;/math&gt;
:&lt;math&gt;x_2 = 1.000000000000000.&lt;/math&gt;
However, when computed using IEEE 754 double-precision arithmetic corresponding to 15 to 17 significant digits of accuracy, &lt;math&gt;\Delta&lt;/math&gt; is rounded to 0.0, and the computed roots are
:&lt;math&gt;x_1 = 1.000000014487979,&lt;/math&gt;
:&lt;math&gt;x_2 = 1.000000014487979,&lt;/math&gt; 
which are both false after the 8th significant digit. This is despite the fact that superficially, the problem seems to require only 11 significant digits of accuracy for its solution.

==See also==
* [[Round-off error]]
* [[Kahan summation algorithm]]
* [[Karlsruhe Accurate Arithmetic]]
* [[Exsecant]]
* [[Exponential minus 1]]&lt;!-- function to increase accuracy --&gt;
* [[Natural logarithm plus 1]]&lt;!-- function to increase accuracy --&gt;
* [[wikibooks:Fractals/Mathematics/Numerical#Escaping test|Example in wikibooks: Cancellation of significant digits in numerical computations]]

==References==
{{Reflist|refs=
&lt;ref name="Press_1992"&gt;{{cite book |author-last1=Press |author-first1=William Henry |author-link1=William Henry Press |author-last2=Flannery |author-first2=Brian P. |author-link2=Brian P. Flannery |author-last3=Teukolsky |author-first3=Saul A. |author-link3=Saul A. Teukolsky |author-last4=Vetterling |author-first4=William T. |title=Numerical Recipes in C |title-link=Numerical Recipes in C |date=1992 |edition=2 |publisher= |chapter-url=http://www.nrbook.com/a/bookcpdf.php |chapter=Section 5.6: Quadratic and Cubic Equations}}&lt;/ref&gt;
&lt;ref name="Higham_2002"&gt;{{cite book |author-first=Nicholas John |author-last=Higham |author-link=Nicholas Higham |title=Accuracy and Stability of Numerical Algorithms |edition=2 |publisher=[[SIAM]] |date=2002 |isbn=978-0-89871-521-7 |page=10}}&lt;/ref&gt;
&lt;ref name="Hough_1981"&gt;{{cite journal |author-last=Hough |author-first=David |journal=[[Computer (magazine)|Computer]] |publisher=[[IEEE]] |title=Applications of the proposed IEEE 754 standard for floating point arithmetic |volume=14 |issue=3 |pages=70–74 |doi=10.1109/C-M.1981.220381 |date=March 1981}}&lt;/ref&gt;
&lt;ref name="Kahan_2004"&gt;{{cite web |author-first=William Morton |author-last=Kahan |author-link=William Morton Kahan |title=On the Cost of Floating-Point Computation Without Extra-Precise Arithmetic |url=http://www.cs.berkeley.edu/~wkahan/Qdrtcs.pdf |date=2004-11-20 |access-date=2012-12-25}}&lt;/ref&gt;
}}

[[Category:Numerical analysis]]</text>
      <sha1>p6q24n89yeexcd9gmtqm59dl467m18t</sha1>
    </revision>
  </page>
</mediawiki>
